export PGPASSWORD=$DB_PASS
gunzip /chado-master-tripal.sql.gz
psql -U $DB_USER -h $DB_HOST -p $DB_PORT $DB_NAME < /chado-master-tripal.sql
echo "alter database postgres set search_path = '$user',public,chado;" | psql -U $DB_USER -h $DB_HOST -p $DB_PORT $DB_NAME;
echo "CREATE INDEX bingroup_boxrange ON featuregroup USING gist (chado.boxrange(fmin, fmax)) WHERE (is_root = 1);" | psql -U $DB_USER -h $DB_HOST -p $DB_PORT $DB_NAME;

drush pm-download ctools views tripal-7.x-2.x-dev
drush pm-enable ctools views views_ui libraries services
drush pm-enable rest_server ultimate_cron

wget --no-check-certificate https://drupal.org/files/drupal.pgsql-bytea.27.patch && patch -p1 < drupal.pgsql-bytea.27.patch

cd /var/www/html/sites/all/modules/views
patch -p1 < ../tripal/tripal_views/views-sql-compliant-three-tier-naming-1971160-22.patch

cd /var/www/html/

drush pm-enable tripal_core
if [ ! -z "$TRIPAL_DOWNLOAD_MODULES" ]; then
    drush pm-download ${TRIPAL_DOWNLOAD_MODULES}
fi
if [ ! -z "$TRIPAL_GIT_CLONE_MODULES" ]; then
    cd /var/www/html/sites/all/modules/
    for repo in $TRIPAL_GIT_CLONE_MODULES; do
        git clone $repo
    done
    cd /var/www/html/
fi

if [ ! -z "$THEME_GIT_CLONE" ]; then
    cd /var/www/html/themes/
    for repo in $THEME_GIT_CLONE; do
        git clone $repo
    done
    cd /var/www/html/
fi

drush pm-enable tripal_views tripal_db tripal_cv tripal_organism tripal_analysis tripal_feature ${TRIPAL_ENABLE_MODULES}
mkdir -p /var/www/html/sites/default/files/tripal_organism/tripal_organism/images # Create it now to ensure permissions are ok
chgrp -R www-data /var/www/html/sites/default/files
chmod -R g+rw /var/www/html/sites/default/files

# Ensure permissions are available
drush role-add-perm 'anonymous user' 'access chado_analysis content'
drush role-add-perm 'anonymous user' 'access chado_feature content'
drush role-add-perm 'anonymous user' 'access chado_organism content'
drush role-add-perm 'authenticated user' 'access chado_analysis content'
drush role-add-perm 'authenticated user' 'access chado_feature content'
drush role-add-perm 'authenticated user' 'access chado_organism content'

# Launch jobs automatically created
drush trp-run-jobs --username=admin

# And launch them regularly
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush trp-run-jobs --username=admin') >> /var/log/tripal_jobs.log 2>&1" > tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_0') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_1') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_2') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_3') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_4') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_5') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_6') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_7') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_8') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
echo "*/2 * * * * (bash -lc 'cd /var/www/html; drush cron-run queue_elastic_queue_9') >> /var/log/tripal_cron.log 2>&1" >> tripal_cron
crontab tripal_cron && rm tripal_cron

service cron start
